titanium:build toand$ ./dcol -i Test/abalone.arff.2c0 -o Test/abalone -A -d -D

 DCoL  Copyright (C) 2009  Albert Orriols-Puig and Nuria Macia 
 The DCoL comes with ABSOLUTELY NO WARRANTY; for details type `./dcol show w'. 
 This is free software, and you are welcome to redistribute it 
 under certain conditions; type `./dcol show c' for details. 



  > PROCESSING COMPLEXITY MEASURES ON DATA SET: Test/abalone.arff.2c0

    > Getting basic information from the database: Test/abalone.arff.2c0
      > Number of attributes: 8
      > Number of examples: 4177

    > Initializing parameters 

    > Reading attributes 
      > Type of representation: N
      > Type of representation: R
      > Type of representation: R
      > Type of representation: R
      > Type of representation: R
      > Type of representation: R
      > Type of representation: R
      > Type of representation: R

    > Reading data 

    > Transforming dates into numeric 

    > Making statistics 
      > Reserving memory for statistics 
      > Reserving memory for min/max per class 

    > Replacing missing values 

    > Declaring a distance object for each input variable 
    > Normalizing continuous attributes since NORMALIZED_EUCLIDEAN has been selected as distance function for continuous attributes 
    > Creating an Overlap distance function object 
    > Creating an Euclidean distance function object 
    > Creating an Euclidean distance function object 
    > Creating an Euclidean distance function object 
    > Creating an Euclidean distance function object 
    > Creating an Euclidean distance function object 
    > Creating an Euclidean distance function object 
    > Creating an Euclidean distance function object 

    > PRINTING THE ENVIRONMENT STATE 

       Relation name: abalone-class0
       Number of attributes: 8
       Number of examples: 4177
       == Attribute 0: Sex
		 Type: N
		 Minimum bound: 0
		 Maximum bound: 2
		 Class 0:   '1'  	 Avg + std  ( minVal - maxVal ) --> 	       1 +  17.8275 (   0 -    2 )
		 Frequencies per nominal value: 0.132196 - 0.655295 - 0.212509
		 Class 1:   groupClass  	 Avg + std  ( minVal - maxVal ) --> 	       2 +  26.1479 (   0 -    2 )
		 Frequencies per nominal value: 0.404693 - 0.151625 - 0.443682
		 It can take the values: 'F'; 'I'; 'M'; --
       == Attribute 1: Length
		 Type: R
		 Minimum bound: 0
		 Maximum bound: 1
		 Class 0:   '1'  	 Avg + std  ( minVal - maxVal ) --> 	0.467556 + 0.150453 (   0 - 0.871622 )
		 Class 1:   groupClass  	 Avg + std  ( minVal - maxVal ) --> 	0.677447 + 0.115622 (0.277027 -    1 )
       == Attribute 2: Diameter
		 Type: R
		 Minimum bound: 0
		 Maximum bound: 1
		 Class 0:   '1'  	 Avg + std  ( minVal - maxVal ) --> 	0.447523 + 0.151697 (   0 - 0.857143 )
		 Class 1:   groupClass  	 Avg + std  ( minVal - maxVal ) --> 	0.667011 + 0.118417 (0.252101 -    1 )
       == Attribute 3: Height
		 Type: R
		 Minimum bound: 0
		 Maximum bound: 1.13
		 Class 0:   '1'  	 Avg + std  ( minVal - maxVal ) --> 	0.0943322 + 0.0370049 (   0 -    1 )
		 Class 1:   groupClass  	 Avg + std  ( minVal - maxVal ) --> 	0.138266 + 0.026831 (0.0132743 - 0.455752 )
       == Attribute 4: Whole.weight
		 Type: R
		 Minimum bound: 0
		 Maximum bound: 2.8255
		 Class 0:   '1'  	 Avg + std  ( minVal - maxVal ) --> 	0.152426 +  0.10834 (   0 - 0.604923 )
		 Class 1:   groupClass  	 Avg + std  ( minVal - maxVal ) --> 	0.364114 + 0.156269 (0.0417921 -    1 )
       == Attribute 5: Shucked.weight
		 Type: R
		 Minimum bound: 0
		 Maximum bound: 1.488
		 Class 0:   '1'  	 Avg + std  ( minVal - maxVal ) --> 	0.132615 + 0.0988426 (   0 - 0.554472 )
		 Class 1:   groupClass  	 Avg + std  ( minVal - maxVal ) --> 	0.296054 + 0.140109 (0.027236 -    1 )
       == Attribute 6: Viscera.weight
		 Type: R
		 Minimum bound: 0
		 Maximum bound: 1
		 Class 0:   '1'  	 Avg + std  ( minVal - maxVal ) --> 	0.122261 + 0.0896188 (   0 - 0.506912 )
		 Class 1:   groupClass  	 Avg + std  ( minVal - maxVal ) --> 	0.295464 + 0.131216 (0.0309414 -    1 )
       == Attribute 7: Shell.weight
		 Type: R
		 Minimum bound: 0
		 Maximum bound: 1.005
		 Class 0:   '1'  	 Avg + std  ( minVal - maxVal ) --> 	0.119476 + 0.0806537 (   0 - 0.466866 )
		 Class 1:   groupClass  	 Avg + std  ( minVal - maxVal ) --> 	0.295946 + 0.123351 (0.0383657 -    1 )
       Class name: class
       Number of classes: 2
		 Class type: N
		 Class values: '1'; groupClass; 

    > END OF PRINTING THE ENVIRONMENT STATE 

Preparing data time: 25

    > Processing the maximum Fisher's discriminant ratio (F1) 
      > Fisher discr. ratio: 1.43373
F1 processing time: 0

    > Processing the directional-vector maximum Fisher's discriminant ratio (F1v) 
      > Organizing examples per class 
        > Number of examples of class 0 '1': 1407
        > Number of examples of class 1 groupClass: 2770
      > Directional-vector maximum Fisher discr. ratio: 3.20914
F1v processing time: 4

    > Processing the overlap of per-class bounding boxes (F2) 
      > Volume overlap: 0.00963926
F2 processing time: 0

    > Processing the efficiency of attributes (F3/F4) 
      > Examples already organized per class 
      > Discriminant power of attribute 0: 0
      > Discriminant power of attribute 1: 0.000478813
      > Discriminant power of attribute 2: 0.00263347
      > Discriminant power of attribute 3: 0.000718219
      > Discriminant power of attribute 4: 0.00263347
      > Discriminant power of attribute 5: 0.00670338
      > Discriminant power of attribute 6: 0.0181949
      > Discriminant power of attribute 7: 0.10869
      > Maximum (individual) efficiency of attributes: 0.10869
      > Collective efficiency of attributes: 0.140053
F3 processing time: 2
F4 processing time: 0

    > Running SMO to get the linear classifier 
      > [WARNING SVM COMPUTATION] Data need to be normalized to run the SVM. 
         >> Data will be normalized. 
 
Data nomalized time: 0
      > Changing classes to -1, 1 
      > Building the Support Vector Machine [progress line] 
        ...............................................................................................................................................................................................................................................................................
      > Changing classes to 0, 1 
SMO processing time: 452

    > Processing the minimized sum of the error distance of a linear classifier (Linear SMO) (L1) 
      > Changing classes to -1, 1 
      > Testing SVM with the training examples 
      > Error distance of a LC: 0.812005
L1 processing time: 0

    > Processing the training error of a linear classifier (Linear SMO) (L2) 
      > Changing classes to -1, 1 
      > Testing SVM with the training examples 
      > Training error of a LC: 0.187455
L2 processing time: 0

    > Processing the nonlinearity of a linear classifier (Linear SMO) (L3) 
      > Examples already organized per class 
      > Generating 4177 examples by means of interpolation 
      > Examples already organized per class 
        > Generating 4177 examples of class 0
        > Generating 4177 examples of class 1
      > Changing classes to -1, 1 
      > Testing SVM with the test examples 
      > Nonlinearity of a LC: 0.180034
L3 processing time: 4

    > Destroying the support vector machine 

    > Processing the fraction of points on the class boundary (N1) 
      > Computing the minimum spanning tree [progress line] [x/100]: 
        ......................................................................................................
      > Number of nodes on the class boundary: 1248
      > Total number of nodes: 4177
      > Fraction of points on the class boundary: 0.298779
N1 processing time: 550

    > Processing the ratio of average intra/inter class nearest neighbor distance (N2) 
      > Intra class distance: 130.177
      > Inter class distance: 237.051
      > Ratio of average intra/inter distance: 0.549151
N2 processing time: 1627

    > Processing the leave-one-out error rate of the one-nearest neighbor classifier (N3) 
      > Testing the 1NN with the training examples 
        > Number of incorrect classifications: 861
        > Number of classifications: 4177
      > Error rate of the 1NN: 0.206129
N3 processing time: 818

    > Processing the nonlinearity of the one-nearest neighbor classifier (N4) 
      > Examples already organized per class 
      > Generating 4177 examples by means of interpolation 
      > Examples already organized per class 
        > Generating 4177 examples of class 0
        > Generating 4177 examples of class 1
      > Testing the 1NN with the test examples 
        > Number of incorrect classifications: 1871
        > Number of classifications: 8354
      > Nonlinearity of the 1NN: 0.223965
N4 processing time: 1627

    > Processing the fraction of maximum covering spheres (T1) 
      > Examples already organized per class 
      > Searching the nearest neighbors of another class 
      > Calculating adherence subsets 
      > Eliminating adherence subsets that are included in others 
      > Fraction max. cov. spheres (numSpheres - meanSpheres - stdSpheres): 0.993057 ( 4148 21.3821 24.042 ) 
T1 processing time: 1685

    > Processing the average number of points per dimension (T2) 
      > Number of points per dimension: 522.125
T2 processing time: 0
Total processing time: 6769


    > DESTROYING THE EXTENDED DATASET 
      > ExtendedDataset destroyed 


    > DESTROYING THE DATASET
      > Dataset destroyed

  > END OF COMPLEXITY MEASURES PROCESSING 